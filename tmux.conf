# tmux source-file .tmux.conf
# source-file ~/.tmux.conf
set -g prefix C-a
set -g prefix2 C-b
set -g xterm-keys on
set -s focus-events on
set -g default-terminal "screen-256color" # colors!
set -g default-command bash   # use bash as default command
set -g base-index 1           # start windows numbering at 1
set -g pane-base-index 1      # make pane numbering consistent with windows
set -g allow-rename on        # rename window automatically
set -g automatic-rename on    # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g status-interval 1      # redraw status line every 1 second
set -g monitor-activity on    # activity
set -g visual-activity on     # activity
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# force a reload of the config file
bind r source-file ~/.tmux.conf\; display-message "Config reloaded..."

####### Panel #######
bind -n M-= resize-pane -Z
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-- split-window -v -c '#{pane_current_path}'
bind -n M-\ split-window -h -c '#{pane_current_path}'

####### Window #######
bind -n C-Left select-window -t :-
bind -n C-Right select-window -t :+
bind -n C-Up new-window -c '#{pane_current_path}'
bind -n C-Down new-window -c '#{pane_current_path}'
bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

####### Theme #######
# source-file $HOME/.dotfiles/tmux/themes/simple.conf
source-file $HOME/.dotfiles/tmux/themes/dracula.conf

####### Plugin #######
run-shell $HOME/.dotfiles/tmux/plugins/tmux-resurrect/resurrect.tmux

####### Vim integration #######
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -n M-Left if-shell  "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n M-Down if-shell  "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n M-Up if-shell    "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n M-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R
bind -T copy-mode-vi C-\ select-pane -l
bind -n C-Left if-shell  "$is_vim" "send-keys C-Left"  "select-window -t :-"
bind -n C-Right if-shell "$is_vim" "send-keys C-Right" "select-window -t :+"
bind -n C-Up if-shell    "$is_vim" "send-keys C-Up"    "new-window -c '#{pane_current_path}'"
bind -n C-Down if-shell  "$is_vim" "send-keys C-Down"  "new-window -c '#{pane_current_path}'"

####### Nested local and remote sessions #######
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  refresh-client -S
